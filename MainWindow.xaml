<Window x:Class="AplicacionDespacho.MainWindow"            
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"            
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"            
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"            
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"            
        xmlns:local="clr-namespace:AplicacionDespacho"            
        xmlns:viewmodels="clr-namespace:AplicacionDespacho.ViewModels"            
        xmlns:converters="clr-namespace:AplicacionDespacho.Converters"            
        mc:Ignorable="d"            
        Title="Aplicación de Despacho" Height="800" Width="900"            
        Loaded="Window_Loaded">

    <Window.Resources>
        <converters:BoolToColorConverter x:Key="BoolToColorConverter"/>
        <converters:BooleanToTextConverter x:Key="BooleanToTextConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        <!-- NUEVO: Converter para mostrar información de pallets bicolor -->
        <converters:BicolorDisplayConverter x:Key="BicolorDisplayConverter"/>
    </Window.Resources>

    <!-- DockPanel para incluir el menú -->
    <DockPanel>
        <!-- Menú principal -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Archivo">
                <MenuItem Header="Salir" Click="MenuSalir_Click"/>
            </MenuItem>
            <MenuItem Header="Configuración">
                <MenuItem Header="Servidor SignalR..." Click="MenuConfiguracionSignalR_Click"/>
                <MenuItem Header="Base de Datos..." Click="MenuConfiguracionBD_Click"/>
            </MenuItem>
            <MenuItem Header="Ayuda">
                <MenuItem Header="Acerca de..." Click="MenuAcercaDe_Click"/>
            </MenuItem>
        </Menu>

        <!-- Grid principal -->
        <Grid Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Contenido principal -->
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Información del viaje activo -->
                <GroupBox Grid.Row="0" Header="Viaje Activo" Margin="0,0,0,10">
                    <StackPanel>
                        <TextBlock Text="{Binding InformacionViajeActivo}" FontWeight="Bold"             
                                  Foreground="{Binding TieneViajeActivo, Converter={StaticResource BoolToColorConverter}}"            
                                  Margin="5"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                            <Button Content="Nuevo Viaje" Command="{Binding ComandoNuevoViaje}"               
                                Width="100" Height="25" Margin="0,0,10,0"/>
                            <Button Content="Continuar Viaje" Command="{Binding ComandoContinuarViaje}"               
                                Width="120" Height="25" Margin="0,0,10,0"/>
                            <Button Content="Ver/Editar Viaje" Command="{Binding ComandoEditarViaje}"               
                                Width="120" Height="25" Margin="0,0,10,0"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <!-- Panel de entrada de pallet -->
                <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,0,0,10">
                    <Label Content="Número de Pallet:"/>
                    <TextBox x:Name="txtNumeroPallet" Width="200" Margin="5,0,10,0"             
                             Text="{Binding EntradaNumeroPallet, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button x:Name="btnEscanear" Content="Escanear" Command="{Binding ComandoEscanear}"/>
                </StackPanel>

                <!-- MODIFICADO: Información del pallet con soporte para bicolor -->
                <GroupBox Header="Información del Pallet Seleccionado/Último Escaneado" Grid.Row="2" Margin="0,10">
                    <Grid DataContext="{Binding UltimoPalletEscaneado}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Información básica del pallet -->
                        <StackPanel Grid.Row="0" Grid.Column="0" Margin="5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="Pallet:" FontWeight="Bold"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding NumeroPallet}"             
                                        IsReadOnly="True" Margin="5,0,10,0"/>

                                <Label Grid.Row="0" Grid.Column="2" Content="Embalaje:" FontWeight="Bold"/>
                                <ComboBox Grid.Row="0" Grid.Column="3" x:Name="cmbEmbalaje"           
                                         IsEditable="True"          
                                         Text="{Binding Embalaje, UpdateSourceTrigger=PropertyChanged}"          
                                         ItemsSource="{Binding DataContext.Embalajes, RelativeSource={RelativeSource AncestorType=Window}}"
                                          Margin="5,0,0,0"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="Calibre:" FontWeight="Bold"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Calibre, UpdateSourceTrigger=PropertyChanged}"             
                                        x:Name="txtCalibre" Margin="5,0,10,0"/>

                                <Label Grid.Row="1" Grid.Column="2" Content="Peso Total (kg):" FontWeight="Bold"/>
                                <TextBlock Grid.Row="1" Grid.Column="3" Text="{Binding PesoTotal, StringFormat=F3}"             
                                          FontWeight="Bold" Foreground="Blue" Margin="5,0,0,0" VerticalAlignment="Center"/>

                                <!-- NUEVO: Indicador de pallet bicolor -->
                                <Label Grid.Row="2" Grid.Column="0" Content="Tipo:" FontWeight="Bold"/>
                                <TextBlock Grid.Row="2" Grid.Column="1"   
                                          Text="{Binding EsBicolor, Converter={StaticResource BicolorDisplayConverter}}"  
                                          FontWeight="Bold" Margin="5,0,10,0" VerticalAlignment="Center"  
                                          Foreground="{Binding EsBicolor, Converter={StaticResource BoolToColorConverter}}"/>
                            </Grid>
                        </StackPanel>
                        <!-- Información específica para pallets bicolor (visible solo si es bicolor) -->
                        <StackPanel Grid.Row="1" Grid.Column="0" Margin="5"      
           Visibility="{Binding EsBicolor, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="INFORMACIÓN BICOLOR:" FontWeight="Bold"     
              Foreground="Orange" Margin="0,0,0,5"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- Primera variedad -->
                                <Label Grid.Row="0" Grid.Column="0" Content="Variedad 1:" FontWeight="Bold"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="cmbVariedad1"           
                 IsEditable="True"          
                 Text="{Binding Variedad, UpdateSourceTrigger=PropertyChanged}"          
                 ItemsSource="{Binding DataContext.Variedades, RelativeSource={RelativeSource AncestorType=Window}}"  
                 Margin="5,0,10,0"/>

                                <!-- Segunda variedad -->
                                <Label Grid.Row="0" Grid.Column="2" Content="Variedad 2:" FontWeight="Bold"/>
                                <ComboBox Grid.Row="0" Grid.Column="3" x:Name="cmbVariedad2"           
                 IsEditable="True"          
                 Text="{Binding SegundaVariedad, UpdateSourceTrigger=PropertyChanged}"          
                 ItemsSource="{Binding DataContext.Variedades, RelativeSource={RelativeSource AncestorType=Window}}"  
                 Margin="5,0,0,0"/>

                                <!-- Campo único de cajas para ambas variedades -->
                                <Label Grid.Row="1" Grid.Column="0" Content="N° de Cajas:" FontWeight="Bold"/>
                                <TextBox Grid.Row="1" Grid.Column="1"     
                Text="{Binding NumeroDeCajas, UpdateSourceTrigger=PropertyChanged}"                 
                x:Name="txtNumeroCajasBicolor" Margin="5,0,10,0"/>

                                <!-- Mensaje informativo -->
                                <TextBlock Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2"  
                  Text="(Total de cajas para ambas variedades)"  
                  FontStyle="Italic" Foreground="Gray"   
                  VerticalAlignment="Center" Margin="5,0,0,0"/>
                            </Grid>
                        </StackPanel>

                        <!-- Información tradicional (visible solo si NO es bicolor) -->
                        <StackPanel Grid.Row="1" Grid.Column="0" Margin="5"      
           Visibility="{Binding EsBicolor, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="Variedad:" FontWeight="Bold"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="cmbVariedad"           
                 IsEditable="True"          
                 Text="{Binding Variedad, UpdateSourceTrigger=PropertyChanged}"          
                 ItemsSource="{Binding DataContext.Variedades, RelativeSource={RelativeSource AncestorType=Window}}"  
                 Margin="5,0,10,0"/>

                                <Label Grid.Row="0" Grid.Column="2" Content="N° de Cajas:" FontWeight="Bold"/>
                                <TextBox Grid.Row="0" Grid.Column="3"     
                Text="{Binding NumeroDeCajas, UpdateSourceTrigger=PropertyChanged}"                 
                x:Name="txtNumeroCajas" Margin="5,0,0,0"/>
                            </Grid>
                        </StackPanel>

                        <!-- Botones de acción -->
                        <StackPanel Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Orientation="Vertical" Margin="10">
                            <Button Content="Aplicar Cambios" x:Name="btnAplicarCambios"                   
                                   Width="120" Height="25" Margin="0,0,0,5"             
                                   Command="{Binding DataContext.ComandoAplicarCambios, RelativeSource={RelativeSource AncestorType=Window}}"/>
                            <Button Content="Revertir" x:Name="btnRevertir"               
                                   Width="120" Height="25" Click="btnRevertir_Click"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <!-- Lista de pallets del viaje con información de peso -->
                <GroupBox Header="Pallets del Viaje" Grid.Row="3" Margin="0,10">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <DataGrid x:Name="dgPallets" Grid.Row="0"            
                                 ItemsSource="{Binding PalletsEscaneados}"            
                                 SelectedItem="{Binding PalletSeleccionado}"            
                                 AutoGenerateColumns="False"             
                                 IsReadOnly="True"            
                                 SelectionMode="Single"          
                                 SelectionChanged="dgPallets_SelectionChanged">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Pallet" Binding="{Binding NumeroPallet}" Width="100"/>

                                <!-- Columna para indicar si es pallet bicolor -->
                                <DataGridTextColumn Header="Tipo" Width="60">
                                    <DataGridTextColumn.Binding>
                                        <Binding Path="EsBicolor" Converter="{StaticResource BooleanToTextConverter}"/>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>

                                <!-- Columna de variedad que muestra información bicolor -->
                                <DataGridTextColumn Header="Variedad(es)" Width="200">
                                    <DataGridTextColumn.Binding>
                                        <Binding Path="VariedadDisplay"/>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="Calibre" Binding="{Binding Calibre}" Width="100"/>
                                <DataGridTextColumn Header="Embalaje" Binding="{Binding Embalaje}" Width="120"/>

                                <!-- Columna de cajas que muestra total para pallets bicolor -->
                                <DataGridTextColumn Header="N° de Cajas" Width="80">
                                    <DataGridTextColumn.Binding>
                                        <Binding Path="TotalCajasDisplay"/>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="Peso Unit. (kg)" Binding="{Binding PesoUnitario, StringFormat=F3}" Width="100"/>
                                <DataGridTextColumn Header="Peso Total (kg)" Binding="{Binding PesoTotal, StringFormat=F3}" Width="110"/>
                                <DataGridTextColumn Header="Modificado"               
                                                   Binding="{Binding Modificado, Converter={StaticResource BooleanToTextConverter}}"               
                                                   Width="80"/>
                            </DataGrid.Columns>
                        </DataGrid>

                        <!-- Botón de eliminación -->
                        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                            <Button Content="Eliminar Pallet Seleccionado" Command="{Binding ComandoEliminarPallet}"           
                                   Width="180" Height="25"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <!-- Resumen y finalización -->
                <Grid Grid.Row="4" Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Resumen de totales -->
                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                        <!-- Contadores de tipos de pallets -->
                        <TextBlock Text="PC: " FontWeight="Bold"/>
                        <TextBlock Text="{Binding TotalPC}" FontWeight="Bold" Margin="0,0,10,0"/>
                        <TextBlock Text="PH: " FontWeight="Bold"/>
                        <TextBlock Text="{Binding TotalPH}" FontWeight="Bold" Margin="0,0,10,0"/>
                        <TextBlock Text="CT: " FontWeight="Bold"/>
                        <TextBlock Text="{Binding TotalCT}" FontWeight="Bold" Margin="0,0,20,0"/>
                        <TextBlock Text="EN: " FontWeight="Bold"/>
                        <TextBlock Text="{Binding TotalEN}" FontWeight="Bold" Margin="0,0,20,0"/>
                        <!-- Totales generales -->
                        <TextBlock Text="Total Pallets: " FontWeight="Bold"/>
                        <TextBlock Text="{Binding PalletsEscaneados.Count}" FontWeight="Bold" Margin="0,0,20,0"/>
                        <TextBlock Text="Total Cajas: " FontWeight="Bold"/>
                        <TextBlock Text="{Binding TotalCajas}" FontWeight="Bold" Margin="0,0,20,0"/>
                        <TextBlock Text="Peso Total: " FontWeight="Bold"/>
                        <TextBlock Text="{Binding PesoTotalViaje, StringFormat=F3}" FontWeight="Bold"/>
                        <TextBlock Text=" kg" FontWeight="Bold"/>
                    </StackPanel>

                    <!-- Botón finalizar -->
                    <Button x:Name="btnFinalizar" Grid.Column="1" Content="Finalizar Despacho"             
                           Command="{Binding ComandoFinalizarDespacho}" Width="150" Height="30"/>
                </Grid>
            </Grid>

            <!-- Botones administrativos -->
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,10,0,0">
                <Button x:Name="btnAbrirAdmin" Content="Administrar Empresas/Vehículos/Conductores"             
                       Width="300" Height="30" Margin="0,0,10,0" Click="btnAbrirAdmin_Click"/>
                <Button x:Name="btnConsultasReportes" Content="Consultas y Reportes"             
                       Width="150" Height="30" Margin="0,0,10,0" Click="btnConsultasReportes_Click"/>
                <Button x:Name="btnGestionPesos" Content="Gestión de Pesos por Embalaje"             
                       Width="200" Height="30" Click="btnGestionPesos_Click"/>
            </StackPanel>
        </Grid>
    </DockPanel>
</Window>